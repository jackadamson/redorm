name: Create Release

on:
  push:
    paths:
      - 'pyproject.toml'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
    - name: Get Package Version
      run: |
        pip install poetry
        poetry config virtualenvs.create false
        poetry install
        python getversion.py
        echo "##[set-output name=release_name;]$(git log --pretty='%s' -1 | head -n 1)"
      id: get_version
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        release_name: ${{ steps.get_version.outputs.release_name }}
        draft: false
        prerelease: false
    - name: Install dependencies
      run: poetry build
    - name: Build and publish
      env:
        POETRY_USERNAME: ${{ secrets.PYPI_USERNAME }}
        POETRY_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: poetry publish
